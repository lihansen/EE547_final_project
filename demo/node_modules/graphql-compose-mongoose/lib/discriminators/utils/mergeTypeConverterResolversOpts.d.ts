import { AllResolversOpts } from 'src/resolvers';
declare type TypeFieldMap = {
    [fieldName: string]: any;
};
export declare function mergePrimitiveTypeFields(baseField?: any, childField?: any, argOptsTypes?: string[] | string): any;
export declare function mergeFilterOperatorsOptsMap(baseFilterOperatorField: TypeFieldMap, childFilterOperatorField?: TypeFieldMap): TypeFieldMap;
export declare function mergeArraysTypeFields(baseField: any, childField: any, argOptsType: TypeFieldMap): TypeFieldMap;
export declare function mergeMapTypeFields(baseField: TypeFieldMap, childField: TypeFieldMap | undefined, argOptsTypes: TypeFieldMap): TypeFieldMap;
export declare function mergeTypeConverterResolverOpts(baseTypeConverterResolverOpts?: AllResolversOpts | false, childTypeConverterResolverOpts?: AllResolversOpts | false): AllResolversOpts | false | void;
export {};
//# sourceMappingURL=mergeTypeConverterResolversOpts.d.ts.map