import type { Resolver, ObjectTypeComposer, InterfaceTypeComposer } from 'graphql-compose';
import type { Model, Document } from 'mongoose';
import { FilterHelperArgsOpts } from './helpers';
export interface CountResolverOpts {
    suffix?: string;
    filter?: FilterHelperArgsOpts | false;
}
declare type TArgs = {
    filter?: any;
};
export declare function count<TSource = any, TContext = any, TDoc extends Document = any>(model: Model<TDoc>, tc: ObjectTypeComposer<TDoc, TContext> | InterfaceTypeComposer<TDoc, TContext>, opts?: CountResolverOpts): Resolver<TSource, TContext, TArgs, TDoc>;
export {};
//# sourceMappingURL=count.d.ts.map