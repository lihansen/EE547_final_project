"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.count = void 0;
const helpers_1 = require("./helpers");
const beforeQueryHelper_1 = require("./helpers/beforeQueryHelper");
function count(model, tc, opts) {
    if (!model || !model.modelName || !model.schema) {
        throw new Error('First arg for Resolver count() should be instance of Mongoose Model.');
    }
    if (!tc || tc.constructor.name !== 'ObjectTypeComposer') {
        throw new Error('Second arg for Resolver count() should be instance of ObjectTypeComposer.');
    }
    const aliases = (0, helpers_1.prepareNestedAliases)(model.schema);
    return tc.schemaComposer.createResolver({
        type: 'Int',
        name: 'count',
        kind: 'query',
        args: Object.assign({}, (0, helpers_1.filterHelperArgs)(tc, model, Object.assign({ prefix: 'FilterCount', suffix: `${(opts === null || opts === void 0 ? void 0 : opts.suffix) || ''}Input` }, opts === null || opts === void 0 ? void 0 : opts.filter))),
        resolve: ((resolveParams) => {
            resolveParams.query = model.find();
            resolveParams.model = model;
            (0, helpers_1.filterHelper)(resolveParams, aliases);
            if (resolveParams.query.countDocuments) {
                resolveParams.query.countDocuments();
                return (0, beforeQueryHelper_1.beforeQueryHelper)(resolveParams);
            }
            else {
                resolveParams.query.count();
                return (0, beforeQueryHelper_1.beforeQueryHelper)(resolveParams);
            }
        }),
    });
}
exports.count = count;
//# sourceMappingURL=count.js.map