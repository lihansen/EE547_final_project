"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.payloadRecordIds = exports.payloadRecordId = void 0;
const graphql_compose_1 = require("graphql-compose");
function payloadRecordId(tc, opts) {
    if (opts === false)
        return null;
    return {
        recordId: {
            description: 'Document ID',
            type: (opts === null || opts === void 0 ? void 0 : opts.type) ? opts.type : tc.hasField('_id') ? tc.getFieldTC('_id') : 'MongoID',
            resolve: (source, _, context) => {
                var _a;
                const doc = (_a = source) === null || _a === void 0 ? void 0 : _a.record;
                if (!doc)
                    return;
                return (opts === null || opts === void 0 ? void 0 : opts.fn) ? opts.fn(doc, context) : doc === null || doc === void 0 ? void 0 : doc._id;
            },
        },
    };
}
exports.payloadRecordId = payloadRecordId;
function payloadRecordIds(tc, opts) {
    if (opts === false)
        return null;
    return {
        recordIds: {
            description: 'Documents IDs',
            type: (opts === null || opts === void 0 ? void 0 : opts.type)
                ? opts.type
                : tc.hasField('_id')
                    ? (0, graphql_compose_1.toInputType)(tc.getFieldTC('_id')).NonNull.List.NonNull
                    : '[MongoID!]!',
            resolve: (source, _, context) => {
                var _a;
                const docs = (_a = source) === null || _a === void 0 ? void 0 : _a.records;
                if (opts === null || opts === void 0 ? void 0 : opts.fn) {
                    return opts.fn(docs, context);
                }
                return docs ? docs.map((doc) => doc === null || doc === void 0 ? void 0 : doc._id) : [];
            },
        },
    };
}
exports.payloadRecordIds = payloadRecordIds;
//# sourceMappingURL=payloadRecordId.js.map