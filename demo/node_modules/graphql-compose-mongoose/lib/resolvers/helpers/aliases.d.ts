import type { Model, Schema } from 'mongoose';
export interface NestedAliasesMap {
    __selfAlias?: string;
    [userFieldName: string]: string | NestedAliasesMap | undefined;
}
export declare type AliasesMap = Record<string, string>;
export declare function prepareAliases(model: Model<any>): AliasesMap | false;
export declare function prepareAliasesReverse(schema: Schema<any>): AliasesMap | false;
export declare function replaceAliases(data: Record<string, any>, aliases?: NestedAliasesMap): Record<string, any>;
export declare function prepareNestedAliases(schema: Schema<any>, preparedAliases?: Map<Schema<any, Model<any, any, any, any>, any>, NestedAliasesMap | undefined>): NestedAliasesMap | undefined;
//# sourceMappingURL=aliases.d.ts.map