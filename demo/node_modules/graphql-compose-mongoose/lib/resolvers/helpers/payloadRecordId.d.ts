import { ObjectTypeComposer, InterfaceTypeComposer, ComposeOutputTypeDefinition, ObjectTypeComposerFieldConfigMapDefinition } from 'graphql-compose';
export declare type PayloadRecordIdHelperOpts = {
    fn?: (doc: any, context: any) => any;
    type?: string | ComposeOutputTypeDefinition<any>;
};
export declare function payloadRecordId<TSource = any, TContext = any>(tc: ObjectTypeComposer<TSource, TContext> | InterfaceTypeComposer<TSource, TContext>, opts?: PayloadRecordIdHelperOpts | false): ObjectTypeComposerFieldConfigMapDefinition<TSource, TContext> | null;
export declare type PayloadRecordIdsHelperOpts = {
    fn?: (docs: any, context: any) => any;
    type?: string | ComposeOutputTypeDefinition<any>;
};
export declare function payloadRecordIds<TSource = any, TContext = any>(tc: ObjectTypeComposer<TSource, TContext> | InterfaceTypeComposer<TSource, TContext>, opts?: PayloadRecordIdHelperOpts | false): ObjectTypeComposerFieldConfigMapDefinition<TSource, TContext> | null;
//# sourceMappingURL=payloadRecordId.d.ts.map