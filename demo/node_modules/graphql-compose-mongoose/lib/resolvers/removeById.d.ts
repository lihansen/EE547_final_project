import type { Resolver, ObjectTypeComposer, InterfaceTypeComposer } from 'graphql-compose';
import type { Model, Document } from 'mongoose';
import { PayloadRecordIdHelperOpts } from './helpers/payloadRecordId';
export interface RemoveByIdResolverOpts {
    suffix?: string;
    recordId?: PayloadRecordIdHelperOpts | false;
    disableErrorField?: boolean;
}
declare type TArgs = {
    _id: any;
};
export declare function removeById<TSource = any, TContext = any, TDoc extends Document = any>(model: Model<TDoc>, tc: ObjectTypeComposer<TDoc, TContext> | InterfaceTypeComposer<TDoc, TContext>, opts?: RemoveByIdResolverOpts): Resolver<TSource, TContext, TArgs, TDoc>;
export {};
//# sourceMappingURL=removeById.d.ts.map