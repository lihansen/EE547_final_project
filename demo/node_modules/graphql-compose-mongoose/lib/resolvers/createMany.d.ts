import { ObjectTypeComposer, InterfaceTypeComposer, Resolver } from 'graphql-compose';
import type { Model, Document } from 'mongoose';
import { RecordHelperArgsOpts } from './helpers';
import { PayloadRecordIdsHelperOpts } from './helpers/payloadRecordId';
export interface CreateManyResolverOpts {
    suffix?: string;
    records?: RecordHelperArgsOpts;
    recordIds?: PayloadRecordIdsHelperOpts | false;
    disableErrorField?: boolean;
}
declare type TArgs = {
    records: any[];
};
export declare function createMany<TSource = any, TContext = any, TDoc extends Document = any>(model: Model<any>, tc: ObjectTypeComposer<TDoc, TContext> | InterfaceTypeComposer<TDoc, TContext>, opts?: CreateManyResolverOpts): Resolver<TSource, TContext, TArgs, TDoc>;
export {};
//# sourceMappingURL=createMany.d.ts.map