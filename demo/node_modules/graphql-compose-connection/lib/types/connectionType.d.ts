import { ObjectTypeComposer, SchemaComposer, ObjectTypeComposerFieldConfigMap } from 'graphql-compose';
export declare type ConnectionType = {
    count: number;
    edges: ConnectionEdgeType[];
    pageInfo: PageInfoType;
};
export declare type ConnectionEdgeType = {
    cursor: string;
    node: any;
};
export declare type PageInfoType = {
    startCursor: string;
    endCursor: string;
    hasPreviousPage: boolean;
    hasNextPage: boolean;
};
export declare function preparePageInfoType(schemaComposer: SchemaComposer<any>, name?: string): ObjectTypeComposer<any, any>;
export declare function prepareEdgeType<TContext>(nodeTypeComposer: ObjectTypeComposer<any, TContext>, edgeTypeName?: string, edgeFields?: ObjectTypeComposerFieldConfigMap<any, TContext>): ObjectTypeComposer<any, TContext>;
export declare function prepareConnectionType<TContext>(typeComposer: ObjectTypeComposer<any, TContext>, resolverName?: string, edgeTypeName?: string, edgeFields?: ObjectTypeComposerFieldConfigMap<any, TContext>): ObjectTypeComposer<any, TContext>;
//# sourceMappingURL=connectionType.d.ts.map